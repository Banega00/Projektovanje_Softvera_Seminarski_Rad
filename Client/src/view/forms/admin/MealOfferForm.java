/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.forms.admin;

import controller.Controller;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Meal;
import model.MealOffer;

/**
 *
 * @author Bane
 */
public class MealOfferForm extends javax.swing.JDialog {

    private List<Meal> meals;
    private DefaultListModel list1Model;
    private DefaultListModel list2Model;
    private DefaultListModel list3Model;
    private DefaultListModel list4Model;

    private List<Meal> selectedMeals;

    private MealOffer mealOffer;

    private MealOfferPanel mop;

    /**
     * Creates new form CreateNewMealOfferForm
     */
    public MealOfferForm(java.awt.Frame parent, boolean modal, MealOfferPanel mop, MealOffer mo) {
        super(parent, modal);
        initComponents();
        txtDate.setText(new SimpleDateFormat("dd.MM.yyyy").format(new Date()));
        selectedMeals = new ArrayList<>();
        list1Model = new DefaultListModel();
        list2Model = new DefaultListModel();
        list3Model = new DefaultListModel();
        list4Model = new DefaultListModel();

        this.mop = mop;
        this.list1.setModel(list1Model);
        this.list2.setModel(list2Model);
        this.list3.setModel(list3Model);
        this.list4.setModel(list4Model);
        try {
            this.meals = Controller.getInstance().getMeals();
            for (Meal m : this.meals) {
                cmbMeals.addItem(m);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greška prilikom učitavanja jela");
            Logger.getLogger(MealOfferForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (mo != null) {
            mealOffer = mo;
            txtDate.setText(new SimpleDateFormat("dd.MM.yyyy").format(mealOffer.getDate()));

            try {
                MealOffer moWithMeals = Controller.getInstance().getMealOffer(mealOffer.getId());

                selectedMeals = moWithMeals.getMeals();
                mo.setMeals(selectedMeals);
                fillListsWithMeals();
            } catch (Exception ex) {
                Logger.getLogger(MealOfferForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Greška prilikom ucitavanja jela iz ponude");
                this.dispose();
                return;
            }
        }
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbMeals = new javax.swing.JComboBox();
        btnAddMeal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList();
        btnSaveMealOffer = new javax.swing.JButton();
        btnDeleteMeal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        list2 = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list3 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        list4 = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("Unesite datum ponude jela u formatu (dd.mm.yyyy)");

        txtDate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Jela");

        cmbMeals.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        btnAddMeal.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnAddMeal.setText("Dodaj");
        btnAddMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMealActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Predjelo");

        list1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jScrollPane1.setViewportView(list1);

        btnSaveMealOffer.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnSaveMealOffer.setText("Sačuvaj ponudu jela");
        btnSaveMealOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveMealOfferActionPerformed(evt);
            }
        });

        btnDeleteMeal.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnDeleteMeal.setText("Obriši");
        btnDeleteMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMealActionPerformed(evt);
            }
        });

        list2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jScrollPane2.setViewportView(list2);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setText("Glavno Jelo");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setText("Salata");

        list3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jScrollPane3.setViewportView(list3);

        list4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jScrollPane4.setViewportView(list4);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setText("Dezert");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
                    .addComponent(txtDate)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbMeals, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(375, 375, 375)
                .addComponent(btnSaveMealOffer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbMeals, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnSaveMealOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMealActionPerformed
        addMeal();
    }//GEN-LAST:event_btnAddMealActionPerformed

    private void btnSaveMealOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveMealOfferActionPerformed
        String dateString = txtDate.getText().trim();
        if (dateString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Datum ponude jela je nephodan!");
            return;
        }
        try {
            Date date = new SimpleDateFormat("dd.MM.yyyy").parse(dateString);
            if (date.before(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum ponude jela ne sme biti u prošlosti!");
                return;
            }
            if (mealOffer == null) {
                MealOffer mo = new MealOffer(0, date, Controller.getInstance().getUserAccount());
                mo.setMeals(selectedMeals);
                Controller.getInstance().saveMealOffer(mo);
                JOptionPane.showMessageDialog(this, "Ponuda jela je uspešno sačuvana!");
            } else {
                mealOffer.setDate(date);
                mealOffer.setAccount(Controller.getInstance().getUserAccount());
                Controller.getInstance().editMealOffer(mealOffer);
                JOptionPane.showMessageDialog(this, "Ponuda jela je uspešno izmenjena!");
            }

            mop.fillTable();
            this.dispose();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Datum ponude jela nije u validnom formatu!");
            Logger.getLogger(MealOfferForm.class.getName()).log(Level.SEVERE, null, ex);
            return;
        } catch (SQLIntegrityConstraintViolationException ex) {
            JOptionPane.showMessageDialog(this, "Ponuda za datum " + txtDate.getText() + " vec postoji");
            Logger.getLogger(MealOfferForm.class.getName()).log(Level.SEVERE, null, ex);
            return;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greška prilikom čuvanja ponude jela");
            Logger.getLogger(MealOfferForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveMealOfferActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void btnDeleteMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMealActionPerformed
        deleteMeal();
    }//GEN-LAST:event_btnDeleteMealActionPerformed

    public void addMeal() {
        Meal m = (Meal) cmbMeals.getSelectedItem();
        if (selectedMeals.contains(m)) {
            JOptionPane.showMessageDialog(this, "Jelo " + m.getName() + " je vec dodato");
            return;
        }
        selectedMeals.add(m);
        switch (m.getType()) {
            case PREDJELO:
                list1Model.addElement(m);
                break;
            case GLAVNO_JELO:
                list2Model.addElement(m);
                break;
            case SALATA:
                list3Model.addElement(m);
                break;
            case DEZERT:
                list4Model.addElement(m);
                break;
        }
    }

    public void deleteMeal() {
        Meal m = (Meal) cmbMeals.getSelectedItem();
        selectedMeals.remove(m);
        switch (m.getType()) {
            case PREDJELO:
                list1Model.removeElement(m);
                break;
            case GLAVNO_JELO:
                list2Model.removeElement(m);
                break;
            case SALATA:
                list3Model.removeElement(m);
                break;
            case DEZERT:
                list4Model.removeElement(m);
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMeal;
    private javax.swing.JButton btnDeleteMeal;
    private javax.swing.JButton btnSaveMealOffer;
    private javax.swing.JComboBox cmbMeals;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList list1;
    private javax.swing.JList list2;
    private javax.swing.JList list3;
    private javax.swing.JList list4;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables

    private void fillListsWithMeals() {
        for (Meal m : this.selectedMeals) {
            switch (m.getType()) {
                case PREDJELO:
                    list1Model.addElement(m);
                    break;
                case GLAVNO_JELO:
                    list2Model.addElement(m);
                    break;
                case SALATA:
                    list3Model.addElement(m);
                    break;
                case DEZERT:
                    list4Model.addElement(m);
                    break;
            }
        }
    }
}
