/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.forms.admin;

import controller.Controller;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MealOffer;
import view.forms.OrderDetailsForm;
import view.forms.employee.MealOfferEmployeePanel;

/**
 *
 * @author Bane
 */
public class MealOfferPanel extends javax.swing.JPanel {

    /**
     * Creates new form MealOfferPanel
     */
    private List<MealOffer> mealOffers;

    public MealOfferPanel() {
        initComponents();
        try {
            fillTable();
        } catch (Exception ex) {
            Logger.getLogger(MealOfferPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Greška prilikom učitavanja ponuda jela");
        }
    }

    public void fillTable() throws Exception {
        mealOffers = Controller.getInstance().getMealOffers();
        DefaultTableModel dtm = (DefaultTableModel) this.tableMealOffers.getModel();
        int rows = dtm.getRowCount();
        if (rows >= 0) {
            for (int i = rows - 1; i >= 0; i--) {
                dtm.removeRow(i);
            }
        }

        int i = 1;
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (MealOffer mo : this.mealOffers) {
            String date = sdf.format(mo.getDate());
            dtm.addRow(new Object[]{String.valueOf(i), date, mo.getAccount().getUsername()});
            i++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMealOffers = new javax.swing.JTable();
        btnCreateMealOffer = new javax.swing.JButton();
        btnChangeMealOffer = new javax.swing.JButton();
        btnShowOrders = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1000, 640));

        tableMealOffers.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tableMealOffers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RB", "Datum", "Kreirao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableMealOffers);

        btnCreateMealOffer.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnCreateMealOffer.setText("Kreiraj ponudu jela");
        btnCreateMealOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateMealOfferActionPerformed(evt);
            }
        });

        btnChangeMealOffer.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnChangeMealOffer.setText("Izmeni ponudu jela");
        btnChangeMealOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeMealOfferActionPerformed(evt);
            }
        });

        btnShowOrders.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnShowOrders.setText("Pregledaj porudžbinu");
        btnShowOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowOrdersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(297, 297, 297))
            .addGroup(layout.createSequentialGroup()
                .addGap(712, 712, 712)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnChangeMealOffer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateMealOffer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShowOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateMealOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangeMealOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShowOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateMealOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateMealOfferActionPerformed
        createMealOffer();
    }//GEN-LAST:event_btnCreateMealOfferActionPerformed

    private void btnChangeMealOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeMealOfferActionPerformed
        changeMealOffer();
    }//GEN-LAST:event_btnChangeMealOfferActionPerformed

    private void btnShowOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowOrdersActionPerformed
        showOrders();
    }//GEN-LAST:event_btnShowOrdersActionPerformed

    public void createMealOffer() {
        new MealOfferForm(null, true, this, null);
    }

    public void changeMealOffer() {
        int row = tableMealOffers.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Izaberite ponudu jela iz tabele koju zelite da izmenite");
            return;
        }

        if (mealOffers.get(row).getDate().before(new Date())) {
            JOptionPane.showMessageDialog(this, "Nije dozvoljeno menjati ponudu jela iz prošlosti");
            return;
        }

        new MealOfferForm(null, true, this, mealOffers.get(row));
    }

    public void showOrders() {
        int row = this.tableMealOffers.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Izaberite ponudu iz tabele za koju želite da prikažete porudžbinu");
            return;
        }
        MealOffer mo = this.mealOffers.get(row);
        try {
            new OrderDetailsForm(null, true, mo);
        } catch (Exception ex) {
            Logger.getLogger(MealOfferEmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Greška prilikom učitavanja porudžbine");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeMealOffer;
    private javax.swing.JButton btnCreateMealOffer;
    private javax.swing.JButton btnShowOrders;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMealOffers;
    // End of variables declaration//GEN-END:variables
}
