/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.forms;

import controller.Controller;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Meal;
import model.MealOffer;
import model.Order;

/**
 *
 * @author Bane
 */
public class OrderDetailsForm extends javax.swing.JDialog {

    /**
     * Creates new form OrderDetailsForm
     */
    private List<Order> orders;
    private MealOffer mealOffer;

    public OrderDetailsForm(java.awt.Frame parent, boolean modal, MealOffer mealOffer) throws Exception {
        super(parent, modal);
        initComponents();

        this.mealOffer = mealOffer;
        jLabel1.setText(jLabel1.getText() + " " + new SimpleDateFormat("dd.MM.yyyy").format(this.mealOffer.getDate()));
        orders = Controller.getInstance().getAllOrders(mealOffer);
        DefaultTableModel dtm = (DefaultTableModel) tableOrders.getModel();
        for (Order o : orders) {
            String[] tableRow = new String[]{o.getAccount().getEmployee().getImePrezime(), "", "", "", ""};
            for (Meal m : o.getOrderedMeals()) {
                switch (m.getType()) {
                    case PREDJELO:
                        tableRow[1] = m.getName();
                        if (m.getNumberOfPortions() > 1) {
                            tableRow[1] += " x" + m.getNumberOfPortions();
                        }
                        break;
                    case GLAVNO_JELO:
                        tableRow[2] = m.getName();
                        if (m.getNumberOfPortions() > 1) {
                            tableRow[2] += " x" + m.getNumberOfPortions();
                        }
                        break;
                    case SALATA:
                        tableRow[3] = m.getName();
                        if (m.getNumberOfPortions() > 1) {
                            tableRow[3] += " x" + m.getNumberOfPortions();
                        }
                        break;
                    case DEZERT:
                        tableRow[4] = m.getName();
                        if (m.getNumberOfPortions() > 1) {
                            tableRow[4] += " x" + m.getNumberOfPortions();
                        }
                        break;
                }
            }
            dtm.addRow(tableRow);
        }
        if (!Controller.getInstance().getUserAccount().isIsAdmin()) {
            btnCreateGroupOrder.setVisible(false);
        }
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableOrders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnCreateGroupOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Zaposleni", "Predjelo", "Glavno jelo", "Salata", "Dezert"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableOrders);

        jLabel1.setText("Pordžbina za datum:");

        btnCreateGroupOrder.setText("Kreiraj grupnu porudžbinu");
        btnCreateGroupOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateGroupOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(btnCreateGroupOrder)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnCreateGroupOrder)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateGroupOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateGroupOrderActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Izaberite putanju na kojoj želite da sačuvate grupnu porudžbinu");

        int userSelection = fileChooser.showSaveDialog(this);
        
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try {
                PrintWriter pw = new PrintWriter(fileToSave);

                pw.println("Grupna porudžbina za dan " + this.mealOffer.getDate());
                pw.println("_________________________________________________________________________");
                pw.println("Jela:");
                pw.println("_________________________________________________________________________");
                List<Meal> distinctMeals = new ArrayList<>();
                for (Order o : this.orders) {
                    for (Meal m : o.getOrderedMeals()) {
                        if(distinctMeals.contains(m)) continue;
                        m.setNumberOfPortions(this.mealTotalPortions(m));
                        distinctMeals.add(m);
                    }
                }

                pw.printf("%-15s %-15s %-20s %-19s\n", "Jelo", "Broj porcija", "Cena", "Ukupna cena");
                double totalPrice = 0;
                for (Meal m : distinctMeals) {
                    totalPrice += m.getPrice() * m.getNumberOfPortions();
                    pw.printf("%-15s %-15d %.2f%-15s %.2f%-15s\n", m.getName(), m.getNumberOfPortions(), m.getPrice(), m.getCurrency().getShortname(), m.getPrice() * m.getNumberOfPortions(), m.getCurrency().getShortname());
                }

                pw.println("_________________________________________________________________________");
                pw.println("Ukupna cena porudžbine: " + totalPrice);
                pw.flush();
                pw.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(OrderDetailsForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Greška prilikom upisivanja u fajl");
            }
        }
    }//GEN-LAST:event_btnCreateGroupOrderActionPerformed
    public int mealTotalPortions(Meal m) {
        int i = 0;
        for (Order o : this.orders) {
            for (Meal meal : o.getOrderedMeals()) {
                if(m.equals(meal)) i += meal.getNumberOfPortions();
            }
        }
        return i;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateGroupOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableOrders;
    // End of variables declaration//GEN-END:variables
}
